### main server no sub domain ###
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /cert_info/my_domain.com/my_domain.com.cer;
    ssl_certificate_key /cert_info/my_domain.com/my_domain.com.key;

    ##session caching info
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # modern configuration
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

    ### NOTE: This specifies to client that your server will always require https (for atleast the next 2 years)
    #         This helps security because now the client will remember your connections and can detect issues if
    #         someone tries a Man in the middle in the future
    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /cert_info/my_domain.com/fullchain.cer;

    server_name  my_domain.com;
    server_tokens off;

    location / {
        # access_log off;
        # proxy_pass http://heimdall;
        
        # proxy_http_version 1.1;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_buffering off;
        # proxy_request_buffering off;
        # proxy_intercept_errors on;
        # # proxy_redirect off;
        return 301 http://heimdall.my_domain.com$request_uri;
    }
    resolver 127.0.0.11 ipv6=off;
}